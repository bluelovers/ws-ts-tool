"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("typescript"),i=require("cross-spawn-extra"),r=require("path"),t=require("get-current-tsconfig"),o=require("debug-color2/logger"),s=require("@ts-type/tsconfig-to-program"),n=require("@ts-type/program-all-diagnostics");function handleOptions(e,i){var o,s;null!==(o=i)&&void 0!==o||(i={});let n=i.cwd;Array.isArray(e)||(e=[e]),n||(n=r.dirname(r.resolve(process.cwd(),e[0])));let l=null!==(s=i.compilerOptions)&&void 0!==s?s:t.getCurrentTsconfig({...i.getCurrentTsconfigOptions,cwd:n}).compilerOptions;return i.overwriteCompilerOptions&&(l={...l,...i.overwriteCompilerOptions}),{files:e,cwd:n,bin:i.bin||"tsc",compilerOptions:l}}function emitTsFiles(i,t){var l;null!==(l=t)&&void 0!==l||(t={});let{cwd:p,compilerOptions:c,files:a}=handleOptions(i,t);a=a.map((e=>r.resolve(p,e)));const d=s.tsconfigToProgram(c);let{compilerHost:g}=t;"function"==typeof g&&(g=g(d));const m=e.createProgram(a,d,g),u=m.emit(),f=u.emitSkipped?1:0;let O=o.consoleLogger;if(f&&(O=O.red),t.verbose){const e=n.getAllDiagnostics(m,u);n.forEachDiagnostics(e,((e,i)=>{O.info("[Diagnostic]",i)})),O.debug(`[CWD] ${p}`)}return f&&O.error(`[Program] Process exiting with code '${f}'.`),{cwd:p,files:a,exitCode:f,emitResult:u,compilerOptions:c,programCompilerOptions:d,program:m,compilerHost:g}}exports.default=emitTsFiles,exports.emitTsFiles=emitTsFiles,exports.handleOptions=handleOptions,exports.spawnEmitTsFiles=function spawnEmitTsFiles(e,r){let{cwd:t,compilerOptions:o,files:n,bin:l}=handleOptions(e,r),p=s.tsconfigToCliArgs(o);return i.sync(l,[...p,"--tsBuildInfoFile",".",n[0]],{cwd:t,stdio:"inherit"})};
//# sourceMappingURL=index.cjs.production.min.cjs.map
